{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Core/Services/coin-gecko.service\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", i_r1.item.thumb, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r1.item.id, \" \");\n  }\n}\nexport class HomeComponent {\n  constructor(cryptoService) {\n    this.cryptoService = cryptoService;\n  }\n  ngOnInit() {\n    // this.cryptoService.retrieveCrypto();\n    this.crypto$ = this.cryptoService.data$;\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.CoinGeckoService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"alt\", \"\", 3, \"src\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, HomeComponent_div_1_Template, 3, 2, \"div\", 0);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.crypto$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.AsyncPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","i_r1","item","thumb","ɵɵsanitizeUrl","ɵɵtextInterpolate1","id","HomeComponent","constructor","cryptoService","ngOnInit","crypto$","data$","ɵɵdirectiveInject","i1","CoinGeckoService","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_1_Template","ɵɵproperty","ɵɵpipeBind1"],"sources":["/Volumes/SamsungT7/Web-Dev /Cryptocurrency/nestjs-angular-crypto/frontend/src/app/Features/home/home.component.ts","/Volumes/SamsungT7/Web-Dev /Cryptocurrency/nestjs-angular-crypto/frontend/src/app/Features/home/home.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, map } from 'rxjs';\nimport { CoinsEntity, Item, Crypto } from '../../Core/Interfaces/crypto';\nimport { CoinGeckoService } from 'src/app/Core/Services/coin-gecko.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private cryptoService: CoinGeckoService) {}\n\n  crypto$!: Observable<CoinsEntity[]>;\n\n  ngOnInit() {\n    // this.cryptoService.retrieveCrypto();\n    this.crypto$ = this.cryptoService.data$;\n  }\n}\n","<div>\n    <div *ngFor=\"let i of crypto$ | async\">\n        <img src=\"{{ i.item.thumb }}\" alt=\"\">\n        {{ i.item.id }}\n    </div>\n</div>"],"mappings":";;;;;ICCIA,EAAA,CAAAC,cAAA,UAAuC;IACnCD,EAAA,CAAAE,SAAA,aAAqC;IACrCF,EAAA,CAAAG,MAAA,GACJ;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;IAFGJ,EAAA,CAAAK,SAAA,GAAwB;IAAxBL,EAAA,CAAAM,qBAAA,QAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA,EAAAT,EAAA,CAAAU,aAAA,CAAwB;IAC7BV,EAAA,CAAAK,SAAA,GACJ;IADIL,EAAA,CAAAW,kBAAA,MAAAJ,IAAA,CAAAC,IAAA,CAAAI,EAAA,MACJ;;;ADOJ,OAAM,MAAOC,aAAa;EACxBC,YAAoBC,aAA+B;IAA/B,KAAAA,aAAa,GAAbA,aAAa;EAAqB;EAItDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,aAAa,CAACG,KAAK;EACzC;;AARWL,aAAa,C;mBAAbA,aAAa,EAAAb,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;AAAbR,aAAa,C;QAAbA,aAAa;EAAAS,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX1B5B,EAAA,CAAAC,cAAA,UAAK;MACDD,EAAA,CAAA8B,UAAA,IAAAC,4BAAA,iBAGM;;MACV/B,EAAA,CAAAI,YAAA,EAAM;;;MAJiBJ,EAAA,CAAAK,SAAA,GAAkB;MAAlBL,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAiC,WAAA,OAAAJ,GAAA,CAAAZ,OAAA,EAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}