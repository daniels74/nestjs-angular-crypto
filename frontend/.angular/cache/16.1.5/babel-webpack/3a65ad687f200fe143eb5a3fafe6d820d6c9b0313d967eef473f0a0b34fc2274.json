{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoinGeckoService {\n  constructor(http) {\n    this.http = http;\n    //cryptoState! : CoinsEntity[] | null | undefined;\n    this.dataSubject$ = new BehaviorSubject([]);\n    this.data$ = this.dataSubject$.asObservable();\n  }\n  retrieveCrypto() {\n    const res = this.http.get('http://localhost:3000/crypto').pipe(map(res => {\n      this.dataSubject$.next(res.coins);\n      return res.coins;\n    }));\n    console.log(\"SErvices Res: \", res.subscribe());\n    // return this.http.get<Crypto>('https://localhost:443/crypto');\n    // d.forEach((d) => {\n    //   console.log(\"HHEE\", d);\n    // })\n  }\n}\n\nCoinGeckoService.ɵfac = function CoinGeckoService_Factory(t) {\n  return new (t || CoinGeckoService)(i0.ɵɵinject(i1.HttpClient));\n};\nCoinGeckoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoinGeckoService,\n  factory: CoinGeckoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","map","CoinGeckoService","constructor","http","dataSubject$","data$","asObservable","retrieveCrypto","res","get","pipe","next","coins","console","log","subscribe","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Volumes/SamsungT7/Web-Dev /Cryptocurrency/nestjs-angular-crypto/frontend/src/app/Core/Services/coin-gecko.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CoinsEntity, Crypto, Item } from '../Interfaces/crypto';\nimport { BehaviorSubject, map, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoinGeckoService {\n  //cryptoState! : CoinsEntity[] | null | undefined;\n  dataSubject$ = new BehaviorSubject<CoinsEntity[]>([])\n  data$ = this.dataSubject$.asObservable();\n\n  constructor(public http: HttpClient) { }\n\n  retrieveCrypto() {\n    const res = this.http.get<Crypto>('http://localhost:3000/crypto')\n    .pipe(\n      map((res) => {\n        this.dataSubject$.next(res.coins);\n        return res.coins;\n      })\n    );\n    console.log(\"SErvices Res: \", res.subscribe());\n    // return this.http.get<Crypto>('https://localhost:443/crypto');\n\n    // d.forEach((d) => {\n    //   console.log(\"HHEE\", d);\n    // })\n  }\n}\n\n\n"],"mappings":"AAGA,SAASA,eAAe,EAAEC,GAAG,QAAa,MAAM;;;AAKhD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAmBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJvB;IACA,KAAAC,YAAY,GAAG,IAAIL,eAAe,CAAgB,EAAE,CAAC;IACrD,KAAAM,KAAK,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;EAED;EAEvCC,cAAcA,CAAA;IACZ,MAAMC,GAAG,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,8BAA8B,CAAC,CAChEC,IAAI,CACHV,GAAG,CAAEQ,GAAG,IAAI;MACV,IAAI,CAACJ,YAAY,CAACO,IAAI,CAACH,GAAG,CAACI,KAAK,CAAC;MACjC,OAAOJ,GAAG,CAACI,KAAK;IAClB,CAAC,CAAC,CACH;IACDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,GAAG,CAACO,SAAS,EAAE,CAAC;IAC9C;IAEA;IACA;IACA;EACF;;;AArBWd,gBAAgB,C;mBAAhBA,gBAAgB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBlB,gBAAgB,C;SAAhBA,gBAAgB;EAAAmB,OAAA,EAAhBnB,gBAAgB,CAAAoB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}