{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoinGeckoService {\n  constructor(http) {\n    this.http = http;\n  }\n  retrieveCrypto() {\n    return this.http.get('https://localhost:8080/crypto');\n  }\n}\nCoinGeckoService.ɵfac = function CoinGeckoService_Factory(t) {\n  return new (t || CoinGeckoService)(i0.ɵɵinject(i1.HttpClient));\n};\nCoinGeckoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoinGeckoService,\n  factory: CoinGeckoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CoinGeckoService","constructor","http","retrieveCrypto","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Volumes/SamsungT7/Web-Dev /Cryptocurrency/nestjs-angular-crypto/frontend/src/app/Core/Services/coin-gecko.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoinGeckoService {\n\n  constructor(private http: HttpClient) { }\n\n  retrieveCrypto() {\n    return this.http.get('https://localhost:8080/crypto');\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,+BAA+B,CAAC;EACvD;;AANWJ,gBAAgB,C;mBAAhBA,gBAAgB,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBR,gBAAgB,C;SAAhBA,gBAAgB;EAAAS,OAAA,EAAhBT,gBAAgB,CAAAU,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}